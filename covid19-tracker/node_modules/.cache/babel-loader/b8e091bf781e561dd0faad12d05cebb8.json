{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/alexacevedo/git/CovidTracker_Cs481/covid19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/Users/alexacevedo/git/CovidTracker_Cs481/covid19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/alexacevedo/git/CovidTracker_Cs481/covid19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexacevedo/git/CovidTracker_Cs481/covid19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(flatIterable);\n\nimport Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\nvar tau = 2 * Math.PI,\n    pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n} // A triangulation is collinear if all its triangles have a non-null area\n\n\nfunction collinear(d) {\n  var triangles = d.triangles,\n      coords = d.coords;\n\n  for (var i = 0; i < triangles.length; i += 3) {\n    var a = 2 * triangles[i],\n        b = 2 * triangles[i + 1],\n        c = 2 * triangles[i + 2],\n        cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nvar Delaunay = /*#__PURE__*/function () {\n  _createClass(Delaunay, null, [{\n    key: \"from\",\n    value: function from(points) {\n      var fx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pointX;\n      var fy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : pointY;\n      var that = arguments.length > 3 ? arguments[3] : undefined;\n      return new Delaunay(\"length\" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));\n    }\n  }]);\n\n  function Delaunay(points) {\n    _classCallCheck(this, Delaunay);\n\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n\n    this._init();\n  }\n\n  _createClass(Delaunay, [{\n    key: \"update\",\n    value: function update() {\n      this._delaunator.update();\n\n      this._init();\n\n      return this;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var d = this._delaunator,\n          points = this.points; // check for collinear\n\n      if (d.hull && d.hull.length > 2 && collinear(d)) {\n        this.collinear = Int32Array.from({\n          length: points.length / 2\n        }, function (_, i) {\n          return i;\n        }).sort(function (i, j) {\n          return points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1];\n        }); // for exact neighbors\n\n        var e = this.collinear[0],\n            f = this.collinear[this.collinear.length - 1],\n            bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]],\n            r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n\n        for (var i = 0, n = points.length / 2; i < n; ++i) {\n          var p = jitter(points[2 * i], points[2 * i + 1], r);\n          points[2 * i] = p[0];\n          points[2 * i + 1] = p[1];\n        }\n\n        this._delaunator = new Delaunator(points);\n      } else {\n        delete this.collinear;\n      }\n\n      var halfedges = this.halfedges = this._delaunator.halfedges;\n      var hull = this.hull = this._delaunator.hull;\n      var triangles = this.triangles = this._delaunator.triangles;\n      var inedges = this.inedges.fill(-1);\n\n      var hullIndex = this._hullIndex.fill(-1); // Compute an index from each point to an (arbitrary) incoming halfedge\n      // Used to give the first neighbor of each point; for this reason,\n      // on the hull we give priority to exterior halfedges\n\n\n      for (var _e = 0, _n = halfedges.length; _e < _n; ++_e) {\n        var _p = triangles[_e % 3 === 2 ? _e - 2 : _e + 1];\n        if (halfedges[_e] === -1 || inedges[_p] === -1) inedges[_p] = _e;\n      }\n\n      for (var _i = 0, _n2 = hull.length; _i < _n2; ++_i) {\n        hullIndex[hull[_i]] = _i;\n      } // degenerate case: 1 or 2 (distinct) points\n\n\n      if (hull.length <= 2 && hull.length > 0) {\n        this.triangles = new Int32Array(3).fill(-1);\n        this.halfedges = new Int32Array(3).fill(-1);\n        this.triangles[0] = hull[0];\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n        inedges[hull[0]] = 1;\n        if (hull.length === 2) inedges[hull[1]] = 0;\n      }\n    }\n  }, {\n    key: \"voronoi\",\n    value: function voronoi(bounds) {\n      return new Voronoi(this, bounds);\n    }\n  }, {\n    key: \"neighbors\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function neighbors(i) {\n      var inedges, hull, _hullIndex, halfedges, triangles, collinear, l, e0, e, p0, p;\n\n      return _regeneratorRuntime.wrap(function neighbors$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              inedges = this.inedges, hull = this.hull, _hullIndex = this._hullIndex, halfedges = this.halfedges, triangles = this.triangles, collinear = this.collinear; // degenerate case with several collinear points\n\n              if (!collinear) {\n                _context.next = 10;\n                break;\n              }\n\n              l = collinear.indexOf(i);\n\n              if (!(l > 0)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return collinear[l - 1];\n\n            case 6:\n              if (!(l < collinear.length - 1)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 9;\n              return collinear[l + 1];\n\n            case 9:\n              return _context.abrupt(\"return\");\n\n            case 10:\n              e0 = inedges[i];\n\n              if (!(e0 === -1)) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 13:\n              // coincident point\n              e = e0, p0 = -1;\n\n            case 14:\n              _context.next = 16;\n              return p0 = triangles[e];\n\n            case 16:\n              e = e % 3 === 2 ? e - 2 : e + 1;\n\n              if (!(triangles[e] !== i)) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 19:\n              // bad triangulation\n              e = halfedges[e];\n\n              if (!(e === -1)) {\n                _context.next = 26;\n                break;\n              }\n\n              p = hull[(_hullIndex[i] + 1) % hull.length];\n\n              if (!(p !== p0)) {\n                _context.next = 25;\n                break;\n              }\n\n              _context.next = 25;\n              return p;\n\n            case 25:\n              return _context.abrupt(\"return\");\n\n            case 26:\n              if (e !== e0) {\n                _context.next = 14;\n                break;\n              }\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, neighbors, this);\n    })\n  }, {\n    key: \"find\",\n    value: function find(x, y) {\n      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n      var i0 = i;\n      var c;\n\n      while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) {\n        i = c;\n      }\n\n      return c;\n    }\n  }, {\n    key: \"_step\",\n    value: function _step(i, x, y) {\n      var inedges = this.inedges,\n          hull = this.hull,\n          _hullIndex = this._hullIndex,\n          halfedges = this.halfedges,\n          triangles = this.triangles,\n          points = this.points;\n      if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n      var c = i;\n      var dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n      var e0 = inedges[i];\n      var e = e0;\n\n      do {\n        var t = triangles[e];\n        var dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n        if (dt < dc) dc = dt, c = t;\n        e = e % 3 === 2 ? e - 2 : e + 1;\n        if (triangles[e] !== i) break; // bad triangulation\n\n        e = halfedges[e];\n\n        if (e === -1) {\n          e = hull[(_hullIndex[i] + 1) % hull.length];\n\n          if (e !== t) {\n            if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n          }\n\n          break;\n        }\n      } while (e !== e0);\n\n      return c;\n    }\n  }, {\n    key: \"render\",\n    value: function render(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points,\n          halfedges = this.halfedges,\n          triangles = this.triangles;\n\n      for (var i = 0, n = halfedges.length; i < n; ++i) {\n        var j = halfedges[i];\n        if (j < i) continue;\n        var ti = triangles[i] * 2;\n        var tj = triangles[j] * 2;\n        context.moveTo(points[ti], points[ti + 1]);\n        context.lineTo(points[tj], points[tj + 1]);\n      }\n\n      this.renderHull(context);\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderPoints\",\n    value: function renderPoints(context) {\n      var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points;\n\n      for (var i = 0, n = points.length; i < n; i += 2) {\n        var x = points[i],\n            y = points[i + 1];\n        context.moveTo(x + r, y);\n        context.arc(x, y, r, 0, tau);\n      }\n\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderHull\",\n    value: function renderHull(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var hull = this.hull,\n          points = this.points;\n      var h = hull[0] * 2,\n          n = hull.length;\n      context.moveTo(points[h], points[h + 1]);\n\n      for (var i = 1; i < n; ++i) {\n        var _h = 2 * hull[i];\n\n        context.lineTo(points[_h], points[_h + 1]);\n      }\n\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"hullPolygon\",\n    value: function hullPolygon() {\n      var polygon = new Polygon();\n      this.renderHull(polygon);\n      return polygon.value();\n    }\n  }, {\n    key: \"renderTriangle\",\n    value: function renderTriangle(i, context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points,\n          triangles = this.triangles;\n      var t0 = triangles[i *= 3] * 2;\n      var t1 = triangles[i + 1] * 2;\n      var t2 = triangles[i + 2] * 2;\n      context.moveTo(points[t0], points[t0 + 1]);\n      context.lineTo(points[t1], points[t1 + 1]);\n      context.lineTo(points[t2], points[t2 + 1]);\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"trianglePolygons\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function trianglePolygons() {\n      var triangles, i, n;\n      return _regeneratorRuntime.wrap(function trianglePolygons$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              triangles = this.triangles;\n              i = 0, n = triangles.length / 3;\n\n            case 2:\n              if (!(i < n)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 5;\n              return this.trianglePolygon(i);\n\n            case 5:\n              ++i;\n              _context2.next = 2;\n              break;\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, trianglePolygons, this);\n    })\n  }, {\n    key: \"trianglePolygon\",\n    value: function trianglePolygon(i) {\n      var polygon = new Polygon();\n      this.renderTriangle(i, polygon);\n      return polygon.value();\n    }\n  }]);\n\n  return Delaunay;\n}();\n\nexport { Delaunay as default };\n\nfunction flatArray(points, fx, fy, that) {\n  var n = points.length;\n  var array = new Float64Array(n * 2);\n\n  for (var i = 0; i < n; ++i) {\n    var p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n\n  return array;\n}\n\nfunction flatIterable(points, fx, fy, that) {\n  var i, _iterator, _step2, p;\n\n  return _regeneratorRuntime.wrap(function flatIterable$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          i = 0;\n          _iterator = _createForOfIteratorHelper(points);\n          _context3.prev = 2;\n\n          _iterator.s();\n\n        case 4:\n          if ((_step2 = _iterator.n()).done) {\n            _context3.next = 13;\n            break;\n          }\n\n          p = _step2.value;\n          _context3.next = 8;\n          return fx.call(that, p, i, points);\n\n        case 8:\n          _context3.next = 10;\n          return fy.call(that, p, i, points);\n\n        case 10:\n          ++i;\n\n        case 11:\n          _context3.next = 4;\n          break;\n\n        case 13:\n          _context3.next = 18;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](2);\n\n          _iterator.e(_context3.t0);\n\n        case 18:\n          _context3.prev = 18;\n\n          _iterator.f();\n\n          return _context3.finish(18);\n\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked, null, [[2, 15, 18, 21]]);\n}","map":{"version":3,"sources":["/Users/alexacevedo/git/CovidTracker_Cs481/covid19-tracker/node_modules/d3-delaunay/src/delaunay.js"],"names":["flatIterable","Delaunator","Path","Polygon","Voronoi","tau","Math","PI","pow","pointX","p","pointY","collinear","d","triangles","coords","i","length","a","b","c","cross","jitter","x","y","r","sin","cos","Delaunay","points","fx","fy","that","flatArray","Float64Array","from","_delaunator","inedges","Int32Array","_hullIndex","_init","update","hull","_","sort","j","e","f","bounds","hypot","n","halfedges","fill","hullIndex","l","indexOf","e0","p0","i0","_step","dc","t","dt","context","buffer","undefined","ti","tj","moveTo","lineTo","renderHull","value","arc","h","closePath","polygon","t0","t1","t2","trianglePolygon","renderTriangle","array","call"],"mappings":";;;;;oDA4OUA,Y;;AA5OV,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,OAAP,MAAoB,cAApB;AAEA,IAAMC,GAAG,GAAG,IAAIC,IAAI,CAACC,EAArB;AAAA,IAAyBC,GAAG,GAAGF,IAAI,CAACE,GAApC;;AAEA,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;AACjB,SAAOA,CAAC,CAAC,CAAD,CAAR;AACD;;AAED,SAASC,MAAT,CAAgBD,CAAhB,EAAmB;AACjB,SAAOA,CAAC,CAAC,CAAD,CAAR;AACD,C,CAED;;;AACA,SAASE,SAAT,CAAmBC,CAAnB,EAAsB;AAAA,MACbC,SADa,GACQD,CADR,CACbC,SADa;AAAA,MACFC,MADE,GACQF,CADR,CACFE,MADE;;AAEpB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAA9B,EAAsCD,CAAC,IAAI,CAA3C,EAA8C;AAC5C,QAAME,CAAC,GAAG,IAAIJ,SAAS,CAACE,CAAD,CAAvB;AAAA,QACMG,CAAC,GAAG,IAAIL,SAAS,CAACE,CAAC,GAAG,CAAL,CADvB;AAAA,QAEMI,CAAC,GAAG,IAAIN,SAAS,CAACE,CAAC,GAAG,CAAL,CAFvB;AAAA,QAGMK,KAAK,GAAG,CAACN,MAAM,CAACK,CAAD,CAAN,GAAYL,MAAM,CAACG,CAAD,CAAnB,KAA2BH,MAAM,CAACI,CAAC,GAAG,CAAL,CAAN,GAAgBJ,MAAM,CAACG,CAAC,GAAG,CAAL,CAAjD,IACA,CAACH,MAAM,CAACI,CAAD,CAAN,GAAYJ,MAAM,CAACG,CAAD,CAAnB,KAA2BH,MAAM,CAACK,CAAC,GAAG,CAAL,CAAN,GAAgBL,MAAM,CAACG,CAAC,GAAG,CAAL,CAAjD,CAJd;AAKA,QAAIG,KAAK,GAAG,KAAZ,EAAmB,OAAO,KAAP;AACpB;;AACD,SAAO,IAAP;AACD;;AAED,SAASC,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,SAAO,CAACF,CAAC,GAAGjB,IAAI,CAACoB,GAAL,CAASH,CAAC,GAAGC,CAAb,IAAkBC,CAAvB,EAA0BD,CAAC,GAAGlB,IAAI,CAACqB,GAAL,CAASJ,CAAC,GAAGC,CAAb,IAAkBC,CAAhD,CAAP;AACD;;IAEoBG,Q;;;yBACPC,M,EAAwC;AAAA,UAAhCC,EAAgC,uEAA3BrB,MAA2B;AAAA,UAAnBsB,EAAmB,uEAAdpB,MAAc;AAAA,UAANqB,IAAM;AAClD,aAAO,IAAIJ,QAAJ,CAAa,YAAYC,MAAZ,GACdI,SAAS,CAACJ,MAAD,EAASC,EAAT,EAAaC,EAAb,EAAiBC,IAAjB,CADK,GAEdE,YAAY,CAACC,IAAb,CAAkBnC,YAAY,CAAC6B,MAAD,EAASC,EAAT,EAAaC,EAAb,EAAiBC,IAAjB,CAA9B,CAFC,CAAP;AAGD;;;AACD,oBAAYH,MAAZ,EAAoB;AAAA;;AAClB,SAAKO,WAAL,GAAmB,IAAInC,UAAJ,CAAe4B,MAAf,CAAnB;AACA,SAAKQ,OAAL,GAAe,IAAIC,UAAJ,CAAeT,MAAM,CAACZ,MAAP,GAAgB,CAA/B,CAAf;AACA,SAAKsB,UAAL,GAAkB,IAAID,UAAJ,CAAeT,MAAM,CAACZ,MAAP,GAAgB,CAA/B,CAAlB;AACA,SAAKY,MAAL,GAAc,KAAKO,WAAL,CAAiBrB,MAA/B;;AACA,SAAKyB,KAAL;AACD;;;;6BACQ;AACP,WAAKJ,WAAL,CAAiBK,MAAjB;;AACA,WAAKD,KAAL;;AACA,aAAO,IAAP;AACD;;;4BACO;AACN,UAAM3B,CAAC,GAAG,KAAKuB,WAAf;AAAA,UAA4BP,MAAM,GAAG,KAAKA,MAA1C,CADM,CAGN;;AACA,UAAIhB,CAAC,CAAC6B,IAAF,IAAU7B,CAAC,CAAC6B,IAAF,CAAOzB,MAAP,GAAgB,CAA1B,IAA+BL,SAAS,CAACC,CAAD,CAA5C,EAAiD;AAC/C,aAAKD,SAAL,GAAiB0B,UAAU,CAACH,IAAX,CAAgB;AAAClB,UAAAA,MAAM,EAAEY,MAAM,CAACZ,MAAP,GAAc;AAAvB,SAAhB,EAA2C,UAAC0B,CAAD,EAAG3B,CAAH;AAAA,iBAASA,CAAT;AAAA,SAA3C,EACd4B,IADc,CACT,UAAC5B,CAAD,EAAI6B,CAAJ;AAAA,iBAAUhB,MAAM,CAAC,IAAIb,CAAL,CAAN,GAAgBa,MAAM,CAAC,IAAIgB,CAAL,CAAtB,IAAiChB,MAAM,CAAC,IAAIb,CAAJ,GAAQ,CAAT,CAAN,GAAoBa,MAAM,CAAC,IAAIgB,CAAJ,GAAQ,CAAT,CAArE;AAAA,SADS,CAAjB,CAD+C,CAE4C;;AAC3F,YAAMC,CAAC,GAAG,KAAKlC,SAAL,CAAe,CAAf,CAAV;AAAA,YAA6BmC,CAAC,GAAG,KAAKnC,SAAL,CAAe,KAAKA,SAAL,CAAeK,MAAf,GAAwB,CAAvC,CAAjC;AAAA,YACE+B,MAAM,GAAG,CAAEnB,MAAM,CAAC,IAAIiB,CAAL,CAAR,EAAiBjB,MAAM,CAAC,IAAIiB,CAAJ,GAAQ,CAAT,CAAvB,EAAoCjB,MAAM,CAAC,IAAIkB,CAAL,CAA1C,EAAmDlB,MAAM,CAAC,IAAIkB,CAAJ,GAAQ,CAAT,CAAzD,CADX;AAAA,YAEEtB,CAAC,GAAG,OAAOnB,IAAI,CAAC2C,KAAL,CAAWD,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAA7B,EAAkCA,MAAM,CAAC,CAAD,CAAN,GAAYA,MAAM,CAAC,CAAD,CAApD,CAFb;;AAGA,aAAK,IAAIhC,CAAC,GAAG,CAAR,EAAWkC,CAAC,GAAGrB,MAAM,CAACZ,MAAP,GAAgB,CAApC,EAAuCD,CAAC,GAAGkC,CAA3C,EAA8C,EAAElC,CAAhD,EAAmD;AACjD,cAAMN,CAAC,GAAGY,MAAM,CAACO,MAAM,CAAC,IAAIb,CAAL,CAAP,EAAgBa,MAAM,CAAC,IAAIb,CAAJ,GAAQ,CAAT,CAAtB,EAAmCS,CAAnC,CAAhB;AACAI,UAAAA,MAAM,CAAC,IAAIb,CAAL,CAAN,GAAgBN,CAAC,CAAC,CAAD,CAAjB;AACAmB,UAAAA,MAAM,CAAC,IAAIb,CAAJ,GAAQ,CAAT,CAAN,GAAoBN,CAAC,CAAC,CAAD,CAArB;AACD;;AACD,aAAK0B,WAAL,GAAmB,IAAInC,UAAJ,CAAe4B,MAAf,CAAnB;AACD,OAZD,MAYO;AACL,eAAO,KAAKjB,SAAZ;AACD;;AAED,UAAMuC,SAAS,GAAG,KAAKA,SAAL,GAAiB,KAAKf,WAAL,CAAiBe,SAApD;AACA,UAAMT,IAAI,GAAG,KAAKA,IAAL,GAAY,KAAKN,WAAL,CAAiBM,IAA1C;AACA,UAAM5B,SAAS,GAAG,KAAKA,SAAL,GAAiB,KAAKsB,WAAL,CAAiBtB,SAApD;AACA,UAAMuB,OAAO,GAAG,KAAKA,OAAL,CAAae,IAAb,CAAkB,CAAC,CAAnB,CAAhB;;AACA,UAAMC,SAAS,GAAG,KAAKd,UAAL,CAAgBa,IAAhB,CAAqB,CAAC,CAAtB,CAAlB,CAxBM,CA0BN;AACA;AACA;;;AACA,WAAK,IAAIN,EAAC,GAAG,CAAR,EAAWI,EAAC,GAAGC,SAAS,CAAClC,MAA9B,EAAsC6B,EAAC,GAAGI,EAA1C,EAA6C,EAAEJ,EAA/C,EAAkD;AAChD,YAAMpC,EAAC,GAAGI,SAAS,CAACgC,EAAC,GAAG,CAAJ,KAAU,CAAV,GAAcA,EAAC,GAAG,CAAlB,GAAsBA,EAAC,GAAG,CAA3B,CAAnB;AACA,YAAIK,SAAS,CAACL,EAAD,CAAT,KAAiB,CAAC,CAAlB,IAAuBT,OAAO,CAAC3B,EAAD,CAAP,KAAe,CAAC,CAA3C,EAA8C2B,OAAO,CAAC3B,EAAD,CAAP,GAAaoC,EAAb;AAC/C;;AACD,WAAK,IAAI9B,EAAC,GAAG,CAAR,EAAWkC,GAAC,GAAGR,IAAI,CAACzB,MAAzB,EAAiCD,EAAC,GAAGkC,GAArC,EAAwC,EAAElC,EAA1C,EAA6C;AAC3CqC,QAAAA,SAAS,CAACX,IAAI,CAAC1B,EAAD,CAAL,CAAT,GAAqBA,EAArB;AACD,OAnCK,CAqCN;;;AACA,UAAI0B,IAAI,CAACzB,MAAL,IAAe,CAAf,IAAoByB,IAAI,CAACzB,MAAL,GAAc,CAAtC,EAAyC;AACvC,aAAKH,SAAL,GAAiB,IAAIwB,UAAJ,CAAe,CAAf,EAAkBc,IAAlB,CAAuB,CAAC,CAAxB,CAAjB;AACA,aAAKD,SAAL,GAAiB,IAAIb,UAAJ,CAAe,CAAf,EAAkBc,IAAlB,CAAuB,CAAC,CAAxB,CAAjB;AACA,aAAKtC,SAAL,CAAe,CAAf,IAAoB4B,IAAI,CAAC,CAAD,CAAxB;AACA,aAAK5B,SAAL,CAAe,CAAf,IAAoB4B,IAAI,CAAC,CAAD,CAAxB;AACA,aAAK5B,SAAL,CAAe,CAAf,IAAoB4B,IAAI,CAAC,CAAD,CAAxB;AACAL,QAAAA,OAAO,CAACK,IAAI,CAAC,CAAD,CAAL,CAAP,GAAmB,CAAnB;AACA,YAAIA,IAAI,CAACzB,MAAL,KAAgB,CAApB,EAAuBoB,OAAO,CAACK,IAAI,CAAC,CAAD,CAAL,CAAP,GAAmB,CAAnB;AACxB;AACF;;;4BACOM,M,EAAQ;AACd,aAAO,IAAI5C,OAAJ,CAAY,IAAZ,EAAkB4C,MAAlB,CAAP;AACD;;;oEACUhC,C;;;;;;;AACFqB,cAAAA,O,GAA8D,I,CAA9DA,O,EAASK,I,GAAqD,I,CAArDA,I,EAAMH,U,GAA+C,I,CAA/CA,U,EAAYY,S,GAAmC,I,CAAnCA,S,EAAWrC,S,GAAwB,I,CAAxBA,S,EAAWF,S,GAAa,I,CAAbA,S,EAExD;;mBACIA,S;;;;;AACI0C,cAAAA,C,GAAI1C,SAAS,CAAC2C,OAAV,CAAkBvC,CAAlB,C;;oBACNsC,CAAC,GAAG,C;;;;;;AAAG,qBAAM1C,SAAS,CAAC0C,CAAC,GAAG,CAAL,CAAf;;;oBACPA,CAAC,GAAG1C,SAAS,CAACK,MAAV,GAAmB,C;;;;;;AAAG,qBAAML,SAAS,CAAC0C,CAAC,GAAG,CAAL,CAAf;;;;;;AAI1BE,cAAAA,E,GAAKnB,OAAO,CAACrB,CAAD,C;;oBACdwC,EAAE,KAAK,CAAC,C;;;;;;;;AAAW;AACnBV,cAAAA,C,GAAIU,E,EAAIC,E,GAAK,CAAC,C;;;;AAEhB,qBAAMA,EAAE,GAAG3C,SAAS,CAACgC,CAAD,CAApB;;;AACAA,cAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,KAAU,CAAV,GAAcA,CAAC,GAAG,CAAlB,GAAsBA,CAAC,GAAG,CAA9B;;oBACIhC,SAAS,CAACgC,CAAD,CAAT,KAAiB9B,C;;;;;;;;AAAW;AAChC8B,cAAAA,CAAC,GAAGK,SAAS,CAACL,CAAD,CAAb;;oBACIA,CAAC,KAAK,CAAC,C;;;;;AACHpC,cAAAA,C,GAAIgC,IAAI,CAAC,CAACH,UAAU,CAACvB,CAAD,CAAV,GAAgB,CAAjB,IAAsB0B,IAAI,CAACzB,MAA5B,C;;oBACVP,CAAC,KAAK+C,E;;;;;;AAAI,qBAAM/C,CAAN;;;;;;kBAGToC,CAAC,KAAKU,E;;;;;;;;;;;;;;yBAEZjC,C,EAAGC,C,EAAU;AAAA,UAAPR,CAAO,uEAAH,CAAG;AAChB,UAAI,CAACO,CAAC,GAAG,CAACA,CAAL,EAAQA,CAAC,KAAKA,CAAf,MAAsBC,CAAC,GAAG,CAACA,CAAL,EAAQA,CAAC,KAAKA,CAApC,CAAJ,EAA4C,OAAO,CAAC,CAAR;AAC5C,UAAMkC,EAAE,GAAG1C,CAAX;AACA,UAAII,CAAJ;;AACA,aAAO,CAACA,CAAC,GAAG,KAAKuC,KAAL,CAAW3C,CAAX,EAAcO,CAAd,EAAiBC,CAAjB,CAAL,KAA6B,CAA7B,IAAkCJ,CAAC,KAAKJ,CAAxC,IAA6CI,CAAC,KAAKsC,EAA1D;AAA8D1C,QAAAA,CAAC,GAAGI,CAAJ;AAA9D;;AACA,aAAOA,CAAP;AACD;;;0BACKJ,C,EAAGO,C,EAAGC,C,EAAG;AAAA,UACNa,OADM,GACqD,IADrD,CACNA,OADM;AAAA,UACGK,IADH,GACqD,IADrD,CACGA,IADH;AAAA,UACSH,UADT,GACqD,IADrD,CACSA,UADT;AAAA,UACqBY,SADrB,GACqD,IADrD,CACqBA,SADrB;AAAA,UACgCrC,SADhC,GACqD,IADrD,CACgCA,SADhC;AAAA,UAC2Ce,MAD3C,GACqD,IADrD,CAC2CA,MAD3C;AAEb,UAAIQ,OAAO,CAACrB,CAAD,CAAP,KAAe,CAAC,CAAhB,IAAqB,CAACa,MAAM,CAACZ,MAAjC,EAAyC,OAAO,CAACD,CAAC,GAAG,CAAL,KAAWa,MAAM,CAACZ,MAAP,IAAiB,CAA5B,CAAP;AACzC,UAAIG,CAAC,GAAGJ,CAAR;AACA,UAAI4C,EAAE,GAAGpD,GAAG,CAACe,CAAC,GAAGM,MAAM,CAACb,CAAC,GAAG,CAAL,CAAX,EAAoB,CAApB,CAAH,GAA4BR,GAAG,CAACgB,CAAC,GAAGK,MAAM,CAACb,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAX,EAAwB,CAAxB,CAAxC;AACA,UAAMwC,EAAE,GAAGnB,OAAO,CAACrB,CAAD,CAAlB;AACA,UAAI8B,CAAC,GAAGU,EAAR;;AACA,SAAG;AACD,YAAIK,CAAC,GAAG/C,SAAS,CAACgC,CAAD,CAAjB;AACA,YAAMgB,EAAE,GAAGtD,GAAG,CAACe,CAAC,GAAGM,MAAM,CAACgC,CAAC,GAAG,CAAL,CAAX,EAAoB,CAApB,CAAH,GAA4BrD,GAAG,CAACgB,CAAC,GAAGK,MAAM,CAACgC,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAX,EAAwB,CAAxB,CAA1C;AACA,YAAIC,EAAE,GAAGF,EAAT,EAAaA,EAAE,GAAGE,EAAL,EAAS1C,CAAC,GAAGyC,CAAb;AACbf,QAAAA,CAAC,GAAGA,CAAC,GAAG,CAAJ,KAAU,CAAV,GAAcA,CAAC,GAAG,CAAlB,GAAsBA,CAAC,GAAG,CAA9B;AACA,YAAIhC,SAAS,CAACgC,CAAD,CAAT,KAAiB9B,CAArB,EAAwB,MALvB,CAK8B;;AAC/B8B,QAAAA,CAAC,GAAGK,SAAS,CAACL,CAAD,CAAb;;AACA,YAAIA,CAAC,KAAK,CAAC,CAAX,EAAc;AACZA,UAAAA,CAAC,GAAGJ,IAAI,CAAC,CAACH,UAAU,CAACvB,CAAD,CAAV,GAAgB,CAAjB,IAAsB0B,IAAI,CAACzB,MAA5B,CAAR;;AACA,cAAI6B,CAAC,KAAKe,CAAV,EAAa;AACX,gBAAIrD,GAAG,CAACe,CAAC,GAAGM,MAAM,CAACiB,CAAC,GAAG,CAAL,CAAX,EAAoB,CAApB,CAAH,GAA4BtC,GAAG,CAACgB,CAAC,GAAGK,MAAM,CAACiB,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAX,EAAwB,CAAxB,CAA/B,GAA4Dc,EAAhE,EAAoE,OAAOd,CAAP;AACrE;;AACD;AACD;AACF,OAdD,QAcSA,CAAC,KAAKU,EAdf;;AAeA,aAAOpC,CAAP;AACD;;;2BACM2C,O,EAAS;AACd,UAAMC,MAAM,GAAGD,OAAO,IAAI,IAAX,GAAkBA,OAAO,GAAG,IAAI7D,IAAJ,EAA5B,GAAuC+D,SAAtD;AADc,UAEPpC,MAFO,GAEyB,IAFzB,CAEPA,MAFO;AAAA,UAECsB,SAFD,GAEyB,IAFzB,CAECA,SAFD;AAAA,UAEYrC,SAFZ,GAEyB,IAFzB,CAEYA,SAFZ;;AAGd,WAAK,IAAIE,CAAC,GAAG,CAAR,EAAWkC,CAAC,GAAGC,SAAS,CAAClC,MAA9B,EAAsCD,CAAC,GAAGkC,CAA1C,EAA6C,EAAElC,CAA/C,EAAkD;AAChD,YAAM6B,CAAC,GAAGM,SAAS,CAACnC,CAAD,CAAnB;AACA,YAAI6B,CAAC,GAAG7B,CAAR,EAAW;AACX,YAAMkD,EAAE,GAAGpD,SAAS,CAACE,CAAD,CAAT,GAAe,CAA1B;AACA,YAAMmD,EAAE,GAAGrD,SAAS,CAAC+B,CAAD,CAAT,GAAe,CAA1B;AACAkB,QAAAA,OAAO,CAACK,MAAR,CAAevC,MAAM,CAACqC,EAAD,CAArB,EAA2BrC,MAAM,CAACqC,EAAE,GAAG,CAAN,CAAjC;AACAH,QAAAA,OAAO,CAACM,MAAR,CAAexC,MAAM,CAACsC,EAAD,CAArB,EAA2BtC,MAAM,CAACsC,EAAE,GAAG,CAAN,CAAjC;AACD;;AACD,WAAKG,UAAL,CAAgBP,OAAhB;AACA,aAAOC,MAAM,IAAIA,MAAM,CAACO,KAAP,EAAjB;AACD;;;iCACYR,O,EAAgB;AAAA,UAAPtC,CAAO,uEAAH,CAAG;AAC3B,UAAMuC,MAAM,GAAGD,OAAO,IAAI,IAAX,GAAkBA,OAAO,GAAG,IAAI7D,IAAJ,EAA5B,GAAuC+D,SAAtD;AAD2B,UAEpBpC,MAFoB,GAEV,IAFU,CAEpBA,MAFoB;;AAG3B,WAAK,IAAIb,CAAC,GAAG,CAAR,EAAWkC,CAAC,GAAGrB,MAAM,CAACZ,MAA3B,EAAmCD,CAAC,GAAGkC,CAAvC,EAA0ClC,CAAC,IAAI,CAA/C,EAAkD;AAChD,YAAMO,CAAC,GAAGM,MAAM,CAACb,CAAD,CAAhB;AAAA,YAAqBQ,CAAC,GAAGK,MAAM,CAACb,CAAC,GAAG,CAAL,CAA/B;AACA+C,QAAAA,OAAO,CAACK,MAAR,CAAe7C,CAAC,GAAGE,CAAnB,EAAsBD,CAAtB;AACAuC,QAAAA,OAAO,CAACS,GAAR,CAAYjD,CAAZ,EAAeC,CAAf,EAAkBC,CAAlB,EAAqB,CAArB,EAAwBpB,GAAxB;AACD;;AACD,aAAO2D,MAAM,IAAIA,MAAM,CAACO,KAAP,EAAjB;AACD;;;+BACUR,O,EAAS;AAClB,UAAMC,MAAM,GAAGD,OAAO,IAAI,IAAX,GAAkBA,OAAO,GAAG,IAAI7D,IAAJ,EAA5B,GAAuC+D,SAAtD;AADkB,UAEXvB,IAFW,GAEK,IAFL,CAEXA,IAFW;AAAA,UAELb,MAFK,GAEK,IAFL,CAELA,MAFK;AAGlB,UAAM4C,CAAC,GAAG/B,IAAI,CAAC,CAAD,CAAJ,GAAU,CAApB;AAAA,UAAuBQ,CAAC,GAAGR,IAAI,CAACzB,MAAhC;AACA8C,MAAAA,OAAO,CAACK,MAAR,CAAevC,MAAM,CAAC4C,CAAD,CAArB,EAA0B5C,MAAM,CAAC4C,CAAC,GAAG,CAAL,CAAhC;;AACA,WAAK,IAAIzD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,CAApB,EAAuB,EAAElC,CAAzB,EAA4B;AAC1B,YAAMyD,EAAC,GAAG,IAAI/B,IAAI,CAAC1B,CAAD,CAAlB;;AACA+C,QAAAA,OAAO,CAACM,MAAR,CAAexC,MAAM,CAAC4C,EAAD,CAArB,EAA0B5C,MAAM,CAAC4C,EAAC,GAAG,CAAL,CAAhC;AACD;;AACDV,MAAAA,OAAO,CAACW,SAAR;AACA,aAAOV,MAAM,IAAIA,MAAM,CAACO,KAAP,EAAjB;AACD;;;kCACa;AACZ,UAAMI,OAAO,GAAG,IAAIxE,OAAJ,EAAhB;AACA,WAAKmE,UAAL,CAAgBK,OAAhB;AACA,aAAOA,OAAO,CAACJ,KAAR,EAAP;AACD;;;mCACcvD,C,EAAG+C,O,EAAS;AACzB,UAAMC,MAAM,GAAGD,OAAO,IAAI,IAAX,GAAkBA,OAAO,GAAG,IAAI7D,IAAJ,EAA5B,GAAuC+D,SAAtD;AADyB,UAElBpC,MAFkB,GAEG,IAFH,CAElBA,MAFkB;AAAA,UAEVf,SAFU,GAEG,IAFH,CAEVA,SAFU;AAGzB,UAAM8D,EAAE,GAAG9D,SAAS,CAACE,CAAC,IAAI,CAAN,CAAT,GAAoB,CAA/B;AACA,UAAM6D,EAAE,GAAG/D,SAAS,CAACE,CAAC,GAAG,CAAL,CAAT,GAAmB,CAA9B;AACA,UAAM8D,EAAE,GAAGhE,SAAS,CAACE,CAAC,GAAG,CAAL,CAAT,GAAmB,CAA9B;AACA+C,MAAAA,OAAO,CAACK,MAAR,CAAevC,MAAM,CAAC+C,EAAD,CAArB,EAA2B/C,MAAM,CAAC+C,EAAE,GAAG,CAAN,CAAjC;AACAb,MAAAA,OAAO,CAACM,MAAR,CAAexC,MAAM,CAACgD,EAAD,CAArB,EAA2BhD,MAAM,CAACgD,EAAE,GAAG,CAAN,CAAjC;AACAd,MAAAA,OAAO,CAACM,MAAR,CAAexC,MAAM,CAACiD,EAAD,CAArB,EAA2BjD,MAAM,CAACiD,EAAE,GAAG,CAAN,CAAjC;AACAf,MAAAA,OAAO,CAACW,SAAR;AACA,aAAOV,MAAM,IAAIA,MAAM,CAACO,KAAP,EAAjB;AACD;;;;;;;;;AAEQzD,cAAAA,S,GAAa,I,CAAbA,S;AACEE,cAAAA,C,GAAI,C,EAAGkC,C,GAAIpC,SAAS,CAACG,MAAV,GAAmB,C;;;oBAAGD,CAAC,GAAGkC,C;;;;;;AAC5C,qBAAM,KAAK6B,eAAL,CAAqB/D,CAArB,CAAN;;;AAD+C,gBAAEA,C;;;;;;;;;;;;;oCAIrCA,C,EAAG;AACjB,UAAM2D,OAAO,GAAG,IAAIxE,OAAJ,EAAhB;AACA,WAAK6E,cAAL,CAAoBhE,CAApB,EAAuB2D,OAAvB;AACA,aAAOA,OAAO,CAACJ,KAAR,EAAP;AACD;;;;;;SA7LkB3C,Q;;AAgMrB,SAASK,SAAT,CAAmBJ,MAAnB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,IAAnC,EAAyC;AACvC,MAAMkB,CAAC,GAAGrB,MAAM,CAACZ,MAAjB;AACA,MAAMgE,KAAK,GAAG,IAAI/C,YAAJ,CAAiBgB,CAAC,GAAG,CAArB,CAAd;;AACA,OAAK,IAAIlC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,CAApB,EAAuB,EAAElC,CAAzB,EAA4B;AAC1B,QAAMN,CAAC,GAAGmB,MAAM,CAACb,CAAD,CAAhB;AACAiE,IAAAA,KAAK,CAACjE,CAAC,GAAG,CAAL,CAAL,GAAec,EAAE,CAACoD,IAAH,CAAQlD,IAAR,EAActB,CAAd,EAAiBM,CAAjB,EAAoBa,MAApB,CAAf;AACAoD,IAAAA,KAAK,CAACjE,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAL,GAAmBe,EAAE,CAACmD,IAAH,CAAQlD,IAAR,EAActB,CAAd,EAAiBM,CAAjB,EAAoBa,MAApB,CAAnB;AACD;;AACD,SAAOoD,KAAP;AACD;;AAED,SAAUjF,YAAV,CAAuB6B,MAAvB,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,IAAvC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACMhB,UAAAA,CADN,GACU,CADV;AAAA,iDAEkBa,MAFlB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEanB,UAAAA,CAFb;AAAA;AAGI,iBAAMoB,EAAE,CAACoD,IAAH,CAAQlD,IAAR,EAActB,CAAd,EAAiBM,CAAjB,EAAoBa,MAApB,CAAN;;AAHJ;AAAA;AAII,iBAAME,EAAE,CAACmD,IAAH,CAAQlD,IAAR,EAActB,CAAd,EAAiBM,CAAjB,EAAoBa,MAApB,CAAN;;AAJJ;AAKI,YAAEb,CAAF;;AALJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}