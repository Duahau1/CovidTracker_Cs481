{"ast":null,"code":"import _slicedToArray from \"/Users/alexacevedo/git/CovidTracker_Cs481/covid19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { slice } from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport nice from \"./nice.js\";\nimport ticks from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\nexport default function () {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds,\n    // and nice the default domain accordingly.\n\n    if (!Array.isArray(tz)) {\n      tz = +tz;\n\n      if (domain === extent) {\n        var _nice = nice(x0, x1, tz);\n\n        var _nice2 = _slicedToArray(_nice, 2);\n\n        x0 = _nice2[0];\n        x1 = _nice2[1];\n      }\n\n      tz = ticks(x0, x1, tz);\n      if (tz[tz.length - 1] === x1) tz.pop(); // exclusive\n    } // Remove any thresholds outside the domain.\n\n\n    var m = tz.length;\n\n    while (tz[0] <= x0) {\n      tz.shift(), --m;\n    }\n\n    while (tz[m - 1] > x1) {\n      tz.pop(), --m;\n    }\n\n    var bins = new Array(m + 1),\n        bin; // Initialize bins.\n\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    } // Assign data to bins by value, ignoring any outside the domain.\n\n\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function (_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}","map":{"version":3,"sources":["/Users/alexacevedo/git/CovidTracker_Cs481/covid19-tracker/node_modules/d3-array/src/bin.js"],"names":["slice","bisect","constant","extent","identity","nice","ticks","sturges","value","domain","threshold","histogram","data","Array","isArray","from","i","n","length","x","values","xz","x0","x1","tz","pop","m","shift","bins","bin","push","_","arguments","thresholds","call"],"mappings":";AAAA,SAAQA,KAAR,QAAoB,YAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,eAAe,YAAW;AACxB,MAAIC,KAAK,GAAGJ,QAAZ;AAAA,MACIK,MAAM,GAAGN,MADb;AAAA,MAEIO,SAAS,GAAGH,OAFhB;;AAIA,WAASI,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAL,EAA0BA,IAAI,GAAGC,KAAK,CAACE,IAAN,CAAWH,IAAX,CAAP;AAE1B,QAAII,CAAJ;AAAA,QACIC,CAAC,GAAGL,IAAI,CAACM,MADb;AAAA,QAEIC,CAFJ;AAAA,QAGIC,MAAM,GAAG,IAAIP,KAAJ,CAAUI,CAAV,CAHb;;AAKA,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,CAAhB,EAAmB,EAAED,CAArB,EAAwB;AACtBI,MAAAA,MAAM,CAACJ,CAAD,CAAN,GAAYR,KAAK,CAACI,IAAI,CAACI,CAAD,CAAL,EAAUA,CAAV,EAAaJ,IAAb,CAAjB;AACD;;AAED,QAAIS,EAAE,GAAGZ,MAAM,CAACW,MAAD,CAAf;AAAA,QACIE,EAAE,GAAGD,EAAE,CAAC,CAAD,CADX;AAAA,QAEIE,EAAE,GAAGF,EAAE,CAAC,CAAD,CAFX;AAAA,QAGIG,EAAE,GAAGd,SAAS,CAACU,MAAD,EAASE,EAAT,EAAaC,EAAb,CAHlB,CAZuB,CAiBvB;AACA;;AACA,QAAI,CAACV,KAAK,CAACC,OAAN,CAAcU,EAAd,CAAL,EAAwB;AACtBA,MAAAA,EAAE,GAAG,CAACA,EAAN;;AACA,UAAIf,MAAM,KAAKN,MAAf;AAAA,oBAAkCE,IAAI,CAACiB,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAtC;;AAAA;;AAAwBF,QAAAA,EAAxB;AAA4BC,QAAAA,EAA5B;AAAA;;AACAC,MAAAA,EAAE,GAAGlB,KAAK,CAACgB,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAV;AACA,UAAIA,EAAE,CAACA,EAAE,CAACN,MAAH,GAAY,CAAb,CAAF,KAAsBK,EAA1B,EAA8BC,EAAE,CAACC,GAAH,GAJR,CAIkB;AACzC,KAxBsB,CA0BvB;;;AACA,QAAIC,CAAC,GAAGF,EAAE,CAACN,MAAX;;AACA,WAAOM,EAAE,CAAC,CAAD,CAAF,IAASF,EAAhB;AAAoBE,MAAAA,EAAE,CAACG,KAAH,IAAY,EAAED,CAAd;AAApB;;AACA,WAAOF,EAAE,CAACE,CAAC,GAAG,CAAL,CAAF,GAAYH,EAAnB;AAAuBC,MAAAA,EAAE,CAACC,GAAH,IAAU,EAAEC,CAAZ;AAAvB;;AAEA,QAAIE,IAAI,GAAG,IAAIf,KAAJ,CAAUa,CAAC,GAAG,CAAd,CAAX;AAAA,QACIG,GADJ,CA/BuB,CAkCvB;;AACA,SAAKb,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIU,CAAjB,EAAoB,EAAEV,CAAtB,EAAyB;AACvBa,MAAAA,GAAG,GAAGD,IAAI,CAACZ,CAAD,CAAJ,GAAU,EAAhB;AACAa,MAAAA,GAAG,CAACP,EAAJ,GAASN,CAAC,GAAG,CAAJ,GAAQQ,EAAE,CAACR,CAAC,GAAG,CAAL,CAAV,GAAoBM,EAA7B;AACAO,MAAAA,GAAG,CAACN,EAAJ,GAASP,CAAC,GAAGU,CAAJ,GAAQF,EAAE,CAACR,CAAD,CAAV,GAAgBO,EAAzB;AACD,KAvCsB,CAyCvB;;;AACA,SAAKP,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,CAAhB,EAAmB,EAAED,CAArB,EAAwB;AACtBG,MAAAA,CAAC,GAAGC,MAAM,CAACJ,CAAD,CAAV;;AACA,UAAIM,EAAE,IAAIH,CAAN,IAAWA,CAAC,IAAII,EAApB,EAAwB;AACtBK,QAAAA,IAAI,CAAC3B,MAAM,CAACuB,EAAD,EAAKL,CAAL,EAAQ,CAAR,EAAWO,CAAX,CAAP,CAAJ,CAA0BI,IAA1B,CAA+BlB,IAAI,CAACI,CAAD,CAAnC;AACD;AACF;;AAED,WAAOY,IAAP;AACD;;AAEDjB,EAAAA,SAAS,CAACH,KAAV,GAAkB,UAASuB,CAAT,EAAY;AAC5B,WAAOC,SAAS,CAACd,MAAV,IAAoBV,KAAK,GAAG,OAAOuB,CAAP,KAAa,UAAb,GAA0BA,CAA1B,GAA8B7B,QAAQ,CAAC6B,CAAD,CAA9C,EAAmDpB,SAAvE,IAAoFH,KAA3F;AACD,GAFD;;AAIAG,EAAAA,SAAS,CAACF,MAAV,GAAmB,UAASsB,CAAT,EAAY;AAC7B,WAAOC,SAAS,CAACd,MAAV,IAAoBT,MAAM,GAAG,OAAOsB,CAAP,KAAa,UAAb,GAA0BA,CAA1B,GAA8B7B,QAAQ,CAAC,CAAC6B,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAD,CAA/C,EAA+DpB,SAAnF,IAAgGF,MAAvG;AACD,GAFD;;AAIAE,EAAAA,SAAS,CAACsB,UAAV,GAAuB,UAASF,CAAT,EAAY;AACjC,WAAOC,SAAS,CAACd,MAAV,IAAoBR,SAAS,GAAG,OAAOqB,CAAP,KAAa,UAAb,GAA0BA,CAA1B,GAA8BlB,KAAK,CAACC,OAAN,CAAciB,CAAd,IAAmB7B,QAAQ,CAACF,KAAK,CAACkC,IAAN,CAAWH,CAAX,CAAD,CAA3B,GAA6C7B,QAAQ,CAAC6B,CAAD,CAA/F,EAAoGpB,SAAxH,IAAqID,SAA5I;AACD,GAFD;;AAIA,SAAOC,SAAP;AACD","sourcesContent":["import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport nice from \"./nice.js\";\nimport ticks from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds,\n    // and nice the default domain accordingly.\n    if (!Array.isArray(tz)) {\n      tz = +tz;\n      if (domain === extent) [x0, x1] = nice(x0, x1, tz);\n      tz = ticks(x0, x1, tz);\n      if (tz[tz.length - 1] === x1) tz.pop(); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n"]},"metadata":{},"sourceType":"module"}