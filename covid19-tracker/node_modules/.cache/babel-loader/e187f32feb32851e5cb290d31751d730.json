{"ast":null,"code":"import React from'react';import'./Globe.css';function numberWithCommas(x){return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,',');}var TimeLine=function TimeLine(props){return/*#__PURE__*/React.createElement(\"div\",{className:\"bottom-info-container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"gradient-container\"},\"LOW\",/*#__PURE__*/React.createElement(\"div\",{className:\"gradient\"}),\"HIGH\"),/*#__PURE__*/React.createElement(\"div\",{style:{fontSize:'24px',color:'#ccd6f6',marginTop:'35px'}},\"Total Counts \",/*#__PURE__*/React.createElement(\"span\",{className:\"updated\"})),/*#__PURE__*/React.createElement(\"div\",{style:{color:'#e6f1ff',padding:'0 5px'}},\"INFECTED: \",/*#__PURE__*/React.createElement(\"span\",{id:\"infected\"},numberWithCommas(props.infected)),\" \\u2022 DEATHS:\",/*#__PURE__*/React.createElement(\"span\",{id:\"deaths\"},numberWithCommas(props.deaths)),\" \\u2022 RECOVERED: \",/*#__PURE__*/React.createElement(\"span\",{id:\"recovered\"},numberWithCommas(props.recovered))));};export default TimeLine;","map":{"version":3,"sources":["/Users/alexacevedo/git/CovidTracker_Cs481/covid19-tracker/src/components/Globe/AdditonalInfo.js"],"names":["React","numberWithCommas","x","toString","replace","TimeLine","props","fontSize","color","marginTop","padding","infected","deaths","recovered"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,aAAP,CAEA,QAASC,CAAAA,gBAAT,CAA0BC,CAA1B,CAA4B,CAC1B,MAAOA,CAAAA,CAAC,CAACC,QAAF,GAAaC,OAAb,CAAqB,uBAArB,CAA8C,GAA9C,CAAP,CACD,CAED,GAAMC,CAAAA,QAAQ,CAAE,QAAVA,CAAAA,QAAU,CAACC,KAAD,CAAS,CACvB,mBACE,2BAAK,SAAS,CAAC,uBAAf,eACG,4BAAM,SAAS,CAAC,oBAAhB,qBACE,2BAAK,SAAS,CAAC,UAAf,EADF,QADH,cAIE,2BAAK,KAAK,CAAE,CAACC,QAAQ,CAAE,MAAX,CAAmBC,KAAK,CAAE,SAA1B,CAAqCC,SAAS,CAAE,MAAhD,CAAZ,+BACe,4BAAM,SAAS,CAAC,SAAhB,EADf,CAJF,cAOE,2BAAK,KAAK,CAAE,CAACD,KAAK,CAAE,SAAR,CAAmBE,OAAO,CAAE,OAA5B,CAAZ,4BACM,4BAAM,EAAE,CAAC,UAAT,EAAqBT,gBAAgB,CAACK,KAAK,CAACK,QAAP,CAArC,CADN,gCAEJ,4BAAM,EAAE,CAAC,QAAT,EAAmBV,gBAAgB,CAACK,KAAK,CAACM,MAAP,CAAnC,CAFI,oCAEmE,4BAAM,EAAE,CAAC,WAAT,EAAsBX,gBAAgB,CAACK,KAAK,CAACO,SAAP,CAAtC,CAFnE,CAPF,CADF,CAeC,CAhBH,CAkBA,cAAeR,CAAAA,QAAf","sourcesContent":["import React from 'react'\nimport './Globe.css'\n\nfunction numberWithCommas(x){\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nconst TimeLine =(props)=>{\n  return(\n    <div className=\"bottom-info-container\">\n       <span className=\"gradient-container\">\n      LOW<div className=\"gradient\"></div>HIGH\n      </span>\n      <div style={{fontSize: '24px', color: '#ccd6f6' ,marginTop: '35px'}}>\n        Total Counts <span className=\"updated\"></span>\n      </div>\n      <div style={{color: '#e6f1ff', padding: '0 5px'}}>\n  INFECTED: <span id=\"infected\">{numberWithCommas(props.infected)}</span> • DEATHS:\n  <span id=\"deaths\">{numberWithCommas(props.deaths)}</span> • RECOVERED: <span id=\"recovered\">{numberWithCommas(props.recovered)}</span>\n      </div>\n    </div>\n     \n  )\n  }\n\nexport default TimeLine;"]},"metadata":{},"sourceType":"module"}